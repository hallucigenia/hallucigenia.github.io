<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Fancy‘s Technology Blog</title>
    <link>https://bbyy.io/sc/tags/python/</link>
    <description>Recent content in Python on Fancy‘s Technology Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 20 Feb 2020 15:40:01 +0800</lastBuildDate>
    
	<atom:link href="https://bbyy.io/sc/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python标准库 —— pdb调试工具使用</title>
      <link>https://bbyy.io/sc/code/getting-started-gdb/</link>
      <pubDate>Thu, 20 Feb 2020 15:40:01 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/code/getting-started-gdb/</guid>
      <description>&lt;p&gt;日常DEBUG中，我常用traceback以及Pycharm的无脑断点调试，直到有一天线上在高并发下，僵尸进程暴涨导致卡死，无法精准的定位某些异常时，掌握Python3自带的pdb标准库或ipdb进行单步调试就显得十分必要。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Openpyxl使用 —— Python操作Excel文件总结</title>
      <link>https://bbyy.io/sc/code/openpyxl/</link>
      <pubDate>Sun, 05 Jan 2020 17:32:24 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/code/openpyxl/</guid>
      <description>&lt;p&gt;本文将基本操作结合工作中常用的代码块提炼作为进阶，期望能带来更多启发&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gunicorn Supervisor Deploy</title>
      <link>https://bbyy.io/sc/code/gunicorn-supervisor-deploy/</link>
      <pubDate>Wed, 25 Dec 2019 16:53:48 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/code/gunicorn-supervisor-deploy/</guid>
      <description>&lt;p&gt;服务器部署 Pipenv + Gunicorn + Supervisor + Flask 项目标准化流程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>uWSGI和Gunicorn对比实践笔记</title>
      <link>https://bbyy.io/sc/article/uwsgi-gunicorn/</link>
      <pubDate>Sun, 27 Jan 2019 12:13:48 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/article/uwsgi-gunicorn/</guid>
      <description>&lt;p&gt;在服务器能正常通信后，Werkzeug提供的的WSGI并不适合生产环境，调试完代码第一件事就找个独立WSGI容器。我们这里选择uWSGI和gunicorn，相对来说这两个比gevent更适合大型项目，uWSGI出现的比较早，gunicorn是从Ruby的unicorn移植而来，配置也简单。为了熟悉uwsgi我都尝试一下吧&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Flask创建微信公众号</title>
      <link>https://bbyy.io/sc/article/flask-wechat-official-accounts/</link>
      <pubDate>Mon, 26 Nov 2018 13:07:13 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/article/flask-wechat-official-accounts/</guid>
      <description>&lt;p&gt;基于Python3搭建Flask微信公众号后台&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>