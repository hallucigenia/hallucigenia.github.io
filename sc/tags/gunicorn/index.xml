<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gunicorn on Fancy‘s Technology Blog</title>
    <link>https://bbyy.io/sc/tags/gunicorn/</link>
    <description>Recent content in Gunicorn on Fancy‘s Technology Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 25 Dec 2019 16:53:48 +0800</lastBuildDate>
    
	<atom:link href="https://bbyy.io/sc/tags/gunicorn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gunicorn Supervisor Deploy</title>
      <link>https://bbyy.io/sc/code/gunicorn-supervisor-deploy/</link>
      <pubDate>Wed, 25 Dec 2019 16:53:48 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/code/gunicorn-supervisor-deploy/</guid>
      <description>&lt;p&gt;服务器部署 Pipenv + Gunicorn + Supervisor + Flask 项目标准化流程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>uWSGI和Gunicorn对比实践笔记</title>
      <link>https://bbyy.io/sc/article/uwsgi-gunicorn/</link>
      <pubDate>Sun, 27 Jan 2019 12:13:48 +0800</pubDate>
      
      <guid>https://bbyy.io/sc/article/uwsgi-gunicorn/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;从flask微信公众号后台分析
Ubuntu+Python3+pipenv+flask环境下 uWSGI/Gunicorn+supervisor+nginx配置问题&lt;/p&gt;
&lt;p&gt;这里的示例程序代码接上篇&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//fancysly.com/post/9&#34;&gt;使用Flask创建微信公众号&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在服务器能正常通信后，Werkzeug提供的的WSGI并不适合生产环境，调试完代码第一件事就找个独立WSGI容器。我们这里选择uWSGI和gunicorn，相对来说这两个比gevent更适合大型项目，uWSGI出现的比较早，gunicorn是从Ruby的unicorn移植而来，配置也简单。为了熟悉uwsgi我都尝试一下吧&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>