<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gunicorn on Fancy‘s Blog</title>
    <link>https://bbyy.io/tags/gunicorn/</link>
    <description>Recent content in Gunicorn on Fancy‘s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 25 Dec 2019 16:53:48 +0800</lastBuildDate>
    
	<atom:link href="https://bbyy.io/tags/gunicorn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gunicorn Supervisor Deploy</title>
      <link>https://bbyy.io/code/gunicorn-supervisor-deploy/</link>
      <pubDate>Wed, 25 Dec 2019 16:53:48 +0800</pubDate>
      
      <guid>https://bbyy.io/code/gunicorn-supervisor-deploy/</guid>
      <description>&lt;p&gt;服務器部署 Pipenv + Gunicorn + Supervisor + Flask 項目標準化流程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>uWSGI和Gunicorn對比實踐筆記</title>
      <link>https://bbyy.io/code/uwsgi-gunicorn/</link>
      <pubDate>Sun, 27 Jan 2019 12:13:48 +0800</pubDate>
      
      <guid>https://bbyy.io/code/uwsgi-gunicorn/</guid>
      <description>&lt;p&gt;在服務器能正常通信後，Werkzeug提供的的WSGI並不適合生產環境，調試完代碼第一件事就找個獨立WSGI容器。我們這裏選擇uWSGI和gunicorn，相對來說這兩個比gevent更適合大型項目，uWSGI出現的比較早，gunicorn是從Ruby的unicorn移植而來，配置也簡單。為了熟悉uwsgi我都嘗試一下吧&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>